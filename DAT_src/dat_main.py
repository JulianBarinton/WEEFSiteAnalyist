
class DatInterface:

    def __int__(self):
        pass

    def load_saved_scenarios(self):

        pass
class DemandScenario:

    def __int__(self):
        pass

    def load_survey_data(self):

        pass

    def preprocess_survey_data(self):
        """
        Process raw survey data provided by Kobo API into structured format
        :return:
        """

        pass

    def analyse_survey_data(self):
        """
        Visualise and analyse survey response data.
        - request user input for missing or faulty survey response data
        - request user specify number of households or businesses represented by this survey respondent
        :return:
        """
    def get_user_input_data(self):
        """
        Request and save additional user input
        - metadata required for demand model (such as random variations...)
        - constants (such as energy content...)
        :return:
        """
    def generate_ramp_model_input(self):
        """
        Generate structured input for RAMP model (RampControl class) from processed survey data and user input data
        :return:
        """

    def run_ramp_model(self):
        """
        Initialise an instance of RampControl and run the RAMP model for all demands
        :return:
        """

    def process_ramp_model_output(self):
        """
        Process the demand profiles generated by the RAMP model and save them
        :return:
        """